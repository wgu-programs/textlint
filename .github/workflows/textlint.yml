name: Run TextLint Rules

on:
  repository_dispatch:
    types: [run-textlint]

jobs:
  textLint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install textlint
        run: npm install --save-dev textlint jq
      - name: Install textlint rules
        run: |
          rules_json='${{ github.event.client_payload.rules }}'
          echo "$rules_json" > rules.json
          rules_array=$(jq -r '.[]' rules.json)

          for rule in $rules_array
          do
            npm install --save-dev $rule
          done
      - name: Create .textlintrc file
        run: |
          rules_json='${{ github.event.client_payload.rules }}'
          echo "{ \"rules\": {" > .textlintrc
          rules_array=$(jq -r '.[]' rules.json | sed -e 's/^/\"/' -e 's/$/\": true,/' )
          echo $rules_array | sed 's/,$//' >> .textlintrc
          echo "} }" >> .textlintrc
      - name: Create temporary file with input text
        run: echo "${{ github.event.client_payload.text }}" > temp.md
      - name: Run textlint
        id: textlint
        run: |
          npx textlint temp.md || echo "Errors found"
      - name: Parse textlint output
        id: parse
        run: |
          if npx textlint temp.md --format json > output.json; then
            echo "result=TRUE" >> $GITHUB_ENV
          else
            cat output.json
            errors=$(cat output.json | jq -c .)
            echo "::set-output name=result::$errors"
          fi
      - name: Output result
        run: echo "${{ steps.parse.outputs.result }}"
